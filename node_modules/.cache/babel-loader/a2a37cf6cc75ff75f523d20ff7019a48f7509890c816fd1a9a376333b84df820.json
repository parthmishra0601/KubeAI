{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prafu\\\\OneDrive\\\\Desktop\\\\KubeAI2\\\\Kubernets-hackathon\\\\src\\\\pages\\\\Issues.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Issues = () => {\n  _s();\n  const [predictedAnomalies, setPredictedAnomalies] = useState([]);\n  const [evaluationError, setEvaluationError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEvaluationData = async () => {\n      setLoading(true);\n      setEvaluationError(null);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5001/model-evaluation\");\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(\"HTTP error fetching evaluation:\", response.status, errorText);\n          throw new Error(`HTTP error! Status: ${response.status}, Body: ${errorText}`);\n        }\n        const data = await response.json();\n        // Assuming the backend now returns the predicted anomaly type directly\n        // based on the input features you mentioned.\n        // Example backend response: {\"predicted_anomaly\": \"CPU High Usage\"}\n        if (data && data.predicted_anomaly) {\n          setPredictedAnomalies([{\n            type: data.predicted_anomaly\n          }]);\n        } else if (data && Array.isArray(data.anomalies) && data.anomalies.every(item => item && item.type)) {\n          // Fallback if the backend returns an array of anomaly types\n          setPredictedAnomalies(data.anomalies);\n        } else {\n          console.warn(\"Model evaluation data format unexpected:\", data);\n          setEvaluationError(new Error(\"Unexpected data format for model evaluation.\"));\n        }\n      } catch (error) {\n        console.error(\"Error fetching model evaluation:\", error);\n        setEvaluationError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEvaluationData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card evaluation-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD2E Predicted Anomaly Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading predicted anomaly type...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : evaluationError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error loading prediction: \", evaluationError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : predictedAnomalies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No anomalies predicted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"evaluation-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Predicted Anomaly Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: predictedAnomalies.map((anomaly, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: anomaly.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Issues, \"ME3xu72XZ7Mg0gNRv+7hpR0LYNM=\");\n_c = Issues;\nexport default Issues;\nvar _c;\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Issues","_s","predictedAnomalies","setPredictedAnomalies","evaluationError","setEvaluationError","loading","setLoading","fetchEvaluationData","response","fetch","ok","errorText","text","console","error","status","Error","data","json","predicted_anomaly","type","Array","isArray","anomalies","every","item","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","anomaly","index","_c","$RefreshReg$"],"sources":["C:/Users/prafu/OneDrive/Desktop/KubeAI2/Kubernets-hackathon/src/pages/Issues.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Issues = () => {\r\n  const [predictedAnomalies, setPredictedAnomalies] = useState([]);\r\n  const [evaluationError, setEvaluationError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchEvaluationData = async () => {\r\n      setLoading(true);\r\n      setEvaluationError(null);\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5001/model-evaluation\");\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error(\"HTTP error fetching evaluation:\", response.status, errorText);\r\n          throw new Error(`HTTP error! Status: ${response.status}, Body: ${errorText}`);\r\n        }\r\n        const data = await response.json();\r\n        // Assuming the backend now returns the predicted anomaly type directly\r\n        // based on the input features you mentioned.\r\n        // Example backend response: {\"predicted_anomaly\": \"CPU High Usage\"}\r\n        if (data && data.predicted_anomaly) {\r\n          setPredictedAnomalies([{ type: data.predicted_anomaly }]);\r\n        } else if (data && Array.isArray(data.anomalies) && data.anomalies.every(item => item && item.type)) {\r\n          // Fallback if the backend returns an array of anomaly types\r\n          setPredictedAnomalies(data.anomalies);\r\n        }\r\n         else {\r\n          console.warn(\"Model evaluation data format unexpected:\", data);\r\n          setEvaluationError(new Error(\"Unexpected data format for model evaluation.\"));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching model evaluation:\", error);\r\n        setEvaluationError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEvaluationData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card evaluation-card\">\r\n      <h2>ðŸ”® Predicted Anomaly Type</h2>\r\n      {loading ? (\r\n        <p>Loading predicted anomaly type...</p>\r\n      ) : evaluationError ? (\r\n        <p className=\"error\">Error loading prediction: {evaluationError.message}</p>\r\n      ) : predictedAnomalies.length === 0 ? (\r\n        <p>No anomalies predicted.</p>\r\n      ) : (\r\n        <div className=\"table-container\">\r\n          <table className=\"evaluation-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Predicted Anomaly Type</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {predictedAnomalies.map((anomaly, index) => (\r\n                <tr key={index}>\r\n                  <td>{anomaly.type}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issues;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtCD,UAAU,CAAC,IAAI,CAAC;MAChBF,kBAAkB,CAAC,IAAI,CAAC;MACxB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACvCC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEN,QAAQ,CAACO,MAAM,EAAEJ,SAAS,CAAC;UAC5E,MAAM,IAAIK,KAAK,CAAC,uBAAuBR,QAAQ,CAACO,MAAM,WAAWJ,SAAS,EAAE,CAAC;QAC/E;QACA,MAAMM,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC;QACA;QACA;QACA,IAAID,IAAI,IAAIA,IAAI,CAACE,iBAAiB,EAAE;UAClCjB,qBAAqB,CAAC,CAAC;YAAEkB,IAAI,EAAEH,IAAI,CAACE;UAAkB,CAAC,CAAC,CAAC;QAC3D,CAAC,MAAM,IAAIF,IAAI,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAACM,SAAS,CAAC,IAAIN,IAAI,CAACM,SAAS,CAACC,KAAK,CAACC,IAAI,IAAIA,IAAI,IAAIA,IAAI,CAACL,IAAI,CAAC,EAAE;UACnG;UACAlB,qBAAqB,CAACe,IAAI,CAACM,SAAS,CAAC;QACvC,CAAC,MACK;UACJV,OAAO,CAACa,IAAI,CAAC,0CAA0C,EAAET,IAAI,CAAC;UAC9Db,kBAAkB,CAAC,IAAIY,KAAK,CAAC,8CAA8C,CAAC,CAAC;QAC/E;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDV,kBAAkB,CAACU,KAAK,CAAC;MAC3B,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAK6B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC9B,OAAA;MAAA8B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjC3B,OAAO,gBACNP,OAAA;MAAA8B,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACtC7B,eAAe,gBACjBL,OAAA;MAAG6B,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,4BAA0B,EAACzB,eAAe,CAAC8B,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAC1E/B,kBAAkB,CAACiC,MAAM,KAAK,CAAC,gBACjCpC,OAAA;MAAA8B,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE9BlC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B9B,OAAA;QAAO6B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBACjC9B,OAAA;UAAA8B,QAAA,eACE9B,OAAA;YAAA8B,QAAA,eACE9B,OAAA;cAAA8B,QAAA,EAAI;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRlC,OAAA;UAAA8B,QAAA,EACG3B,kBAAkB,CAACkC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACrCvC,OAAA;YAAA8B,QAAA,eACE9B,OAAA;cAAA8B,QAAA,EAAKQ,OAAO,CAAChB;YAAI;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC,GADhBK,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtEID,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAwEZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}