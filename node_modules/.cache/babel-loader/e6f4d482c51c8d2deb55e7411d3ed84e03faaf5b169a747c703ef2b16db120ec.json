{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prafu\\\\OneDrive\\\\Desktop\\\\KubeAI2\\\\Kubernets-hackathon\\\\src\\\\pages\\\\Charts.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\nconst Charts = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for charts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Prepare data for CPU Usage chart\n  const cpuLabels = data.map(entry => entry.timestamp);\n  const cpuData = data.map(entry => {\n    var _entry$cpuUsage;\n    return parseInt(((_entry$cpuUsage = entry.cpuUsage) === null || _entry$cpuUsage === void 0 ? void 0 : _entry$cpuUsage.replace(\"%\", \"\")) || 0);\n  });\n\n  // Prepare data for Memory Usage chart\n  const memoryData = data.map(entry => {\n    var _entry$memoryUsage;\n    return parseInt(((_entry$memoryUsage = entry.memoryUsage) === null || _entry$memoryUsage === void 0 ? void 0 : _entry$memoryUsage.replace(\"%\", \"\")) || 0);\n  });\n  const chartData = {\n    labels: cpuLabels,\n    datasets: [{\n      label: \"CPU Usage (%)\",\n      data: cpuData,\n      fill: false,\n      borderColor: \"rgba(75,192,192,1)\",\n      tension: 0.1\n    }, {\n      label: \"Memory Usage (%)\",\n      data: memoryData,\n      fill: false,\n      borderColor: \"rgba(255,99,132,1)\",\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: \"CPU and Memory Usage Over Time\"\n      }\n    },\n    scales: {\n      x: {\n        type: \"category\",\n        title: {\n          display: true,\n          text: \"Timestamp\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Usage (%)\"\n        },\n        min: 0,\n        max: 100\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC8 Resource Usage Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","Charts","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","cpuLabels","map","entry","timestamp","cpuData","_entry$cpuUsage","parseInt","cpuUsage","replace","memoryData","_entry$memoryUsage","memoryUsage","chartData","labels","datasets","label","fill","borderColor","tension","chartOptions","responsive","plugins","title","display","text","scales","x","type","y","min","max","className","options","_c","$RefreshReg$"],"sources":["C:/Users/prafu/OneDrive/Desktop/KubeAI2/Kubernets-hackathon/src/pages/Charts.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Charts = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available for charts.</p>;\r\n  }\r\n\r\n  // Prepare data for CPU Usage chart\r\n  const cpuLabels = data.map((entry) => entry.timestamp);\r\n  const cpuData = data.map((entry) =>\r\n    parseInt(entry.cpuUsage?.replace(\"%\", \"\") || 0)\r\n  );\r\n\r\n  // Prepare data for Memory Usage chart\r\n  const memoryData = data.map((entry) =>\r\n    parseInt(entry.memoryUsage?.replace(\"%\", \"\") || 0)\r\n  );\r\n\r\n  const chartData = {\r\n    labels: cpuLabels,\r\n    datasets: [\r\n      {\r\n        label: \"CPU Usage (%)\",\r\n        data: cpuData,\r\n        fill: false,\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        tension: 0.1,\r\n      },\r\n      {\r\n        label: \"Memory Usage (%)\",\r\n        data: memoryData,\r\n        fill: false,\r\n        borderColor: \"rgba(255,99,132,1)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"CPU and Memory Usage Over Time\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        type: \"category\",\r\n        title: {\r\n          display: true,\r\n          text: \"Timestamp\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Usage (%)\",\r\n        },\r\n        min: 0,\r\n        max: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts\">\r\n      <h2>ðŸ“ˆ Resource Usage Over Time</h2>\r\n      <Line data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}