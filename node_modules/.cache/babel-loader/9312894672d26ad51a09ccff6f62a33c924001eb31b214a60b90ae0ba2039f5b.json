{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prafu\\\\OneDrive\\\\Desktop\\\\KubeAI2\\\\Kubernets-hackathon\\\\src\\\\pages\\\\Issues.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Issues = () => {\n  _s();\n  const [nodeCpuUtil, setNodeCpuUtil] = useState(\"\");\n  const [containerCpuUtil, setContainerCpuUtil] = useState(\"\");\n  const [nodeMemoryUtil, setNodeMemoryUtil] = useState(\"\");\n  const [containerMemoryUtil, setContainerMemoryUtil] = useState(\"\");\n  const [nodeDiskRead, setNodeDiskRead] = useState(\"\");\n  const [nodeDiskWrite, setNodeDiskWrite] = useState(\"\");\n  const [diskIoTime, setDiskIoTime] = useState(\"\");\n  const [networkReceive, setNetworkReceive] = useState(\"\");\n  const [networkTransmit, setNetworkTransmit] = useState(\"\");\n  const [networkDrops, setNetworkDrops] = useState(\"\");\n  const [podCpuLimits, setPodCpuLimits] = useState(\"\");\n  const [podCpuRequests, setPodCpuRequests] = useState(\"\");\n  const [podMemoryRequests, setPodMemoryRequests] = useState(\"\");\n  const [podMemoryLimits, setPodMemoryLimits] = useState(\"\");\n  const [activeAlerts, setActiveAlerts] = useState(\"\");\n  const [pendingAlerts, setPendingAlerts] = useState(\"\");\n  const [podCrashEvents, setPodCrashEvents] = useState(\"\");\n  const [nodeFailures, setNodeFailures] = useState(\"\");\n  const [cpuManagerErrors, setCpuManagerErrors] = useState(\"\");\n  const [memoryManagerErrors, setMemoryManagerErrors] = useState(\"\");\n  const [predictedAnomaly, setPredictedAnomaly] = useState(null);\n  const [predictionError, setPredictionError] = useState(null);\n  const [loadingPrediction, setLoadingPrediction] = useState(false);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case \"node_cpu_utilization\":\n        setNodeCpuUtil(value);\n        break;\n      case \"container_cpu_usage\":\n        setContainerCpuUtil(value);\n        break;\n      case \"node_memory_utilization\":\n        setNodeMemoryUtil(value);\n        break;\n      case \"container_memory_usage\":\n        setContainerMemoryUtil(value);\n        break;\n      case \"node_disk_read\":\n        setNodeDiskRead(value);\n        break;\n      case \"node_disk_write\":\n        setNodeDiskWrite(value);\n        break;\n      case \"disk_io_time\":\n        setDiskIoTime(value);\n        break;\n      case \"network_receive\":\n        setNetworkReceive(value);\n        break;\n      case \"network_transmit\":\n        setNetworkTransmit(value);\n        break;\n      case \"network_drops\":\n        setNetworkDrops(value);\n        break;\n      case \"pod_cpu_limits\":\n        setPodCpuLimits(value);\n        break;\n      case \"pod_cpu_requests\":\n        setPodCpuRequests(value);\n        break;\n      case \"pod_memory_requests\":\n        setPodMemoryRequests(value);\n        break;\n      case \"pod_memory_limits\":\n        setPodMemoryLimits(value);\n        break;\n      case \"active_alerts\":\n        setActiveAlerts(value);\n        break;\n      case \"pending_alerts\":\n        setPendingAlerts(value);\n        break;\n      case \"pod_crash_events\":\n        setPodCrashEvents(value);\n        break;\n      case \"node_failures\":\n        setNodeFailures(value);\n        break;\n      case \"cpu_manager_errors\":\n        setCpuManagerErrors(value);\n        break;\n      case \"memory_manager_errors\":\n        setMemoryManagerErrors(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const predictAnomaly = async () => {\n    setLoadingPrediction(true);\n    setPredictionError(null);\n    setPredictedAnomaly(null);\n    try {\n      const queryParams = new URLSearchParams({\n        node_cpu_utilization: nodeCpuUtil,\n        container_cpu_usage: containerCpuUtil,\n        node_memory_utilization: nodeMemoryUtil,\n        container_memory_usage: containerMemoryUtil,\n        node_disk_read: nodeDiskRead,\n        node_disk_write: nodeDiskWrite,\n        disk_io_time: diskIoTime,\n        network_receive: networkReceive,\n        network_transmit: networkTransmit,\n        network_drops: networkDrops,\n        pod_cpu_limits: podCpuLimits,\n        pod_cpu_requests: podCpuRequests,\n        pod_memory_requests: podMemoryRequests,\n        pod_memory_limits: podMemoryLimits,\n        active_alerts: activeAlerts,\n        pending_alerts: pendingAlerts,\n        pod_crash_events: podCrashEvents,\n        node_failures: nodeFailures,\n        cpu_manager_errors: cpuManagerErrors,\n        memory_manager_errors: memoryManagerErrors\n      });\n      const response = await fetch(`http://127.0.0.1:5001/model-evaluation?${queryParams}`);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"HTTP error during prediction:\", response.status, errorText);\n        throw new Error(`HTTP error! Status: ${response.status}, Body: ${errorText}`);\n      }\n      const data = await response.json();\n      if (data && data.predicted_anomaly) {\n        setPredictedAnomaly(data.predicted_anomaly);\n      } else {\n        console.warn(\"Prediction data format unexpected:\", data);\n        setPredictionError(new Error(\"Unexpected data format for prediction.\"));\n      }\n    } catch (error) {\n      console.error(\"Error during prediction:\", error);\n      setPredictionError(error);\n    } finally {\n      setLoadingPrediction(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card prediction-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u2699\\uFE0F Anomaly Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node CPU Utilization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"node_cpu_utilization\",\n        value: nodeCpuUtil,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Container CPU Usage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"container_cpu_usage\",\n        value: containerCpuUtil,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node Memory Utilization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"node_memory_utilization\",\n        value: nodeMemoryUtil,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Container Memory Usage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"container_memory_usage\",\n        value: containerMemoryUtil,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node Disk Read:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"node_disk_read\",\n        value: nodeDiskRead,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node Disk Write:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"node_disk_write\",\n        value: nodeDiskWrite,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Disk IO Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"disk_io_time\",\n        value: diskIoTime,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Network Receive:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"network_receive\",\n        value: networkReceive,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Network Transmit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"network_transmit\",\n        value: networkTransmit,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Network Drops:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"network_drops\",\n        value: networkDrops,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pod CPU Limits:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"pod_cpu_limits\",\n        value: podCpuLimits,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pod CPU Requests:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"pod_cpu_requests\",\n        value: podCpuRequests,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pod Memory Requests:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"pod_memory_requests\",\n        value: podMemoryRequests,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pod Memory Limits:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"pod_memory_limits\",\n        value: podMemoryLimits,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Active Alerts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"active_alerts\",\n        value: activeAlerts,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pending Alerts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"pending_alerts\",\n        value: pendingAlerts,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pod Crash Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"pod_crash_events\",\n        value: podCrashEvents,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Node Failures:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"node_failures\",\n        value: nodeFailures,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CPU Manager Errors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"cpu_manager_errors\",\n        value: cpuManagerErrors,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Memory Manager Errors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"memory_manager_errors\",\n        value: memoryManagerErrors,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: predictAnomaly,\n      disabled: loadingPrediction,\n      children: loadingPrediction ? \"Predicting...\" : \"Predict Anomaly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), predictionError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Prediction Error: \", predictionError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 27\n    }, this), predictedAnomaly && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predicted Anomaly Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: predictedAnomaly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Issues, \"w/lHubh7csrin3/5WudMf5Klh00=\");\n_c = Issues;\nexport default Issues;\nvar _c;\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Issues","_s","nodeCpuUtil","setNodeCpuUtil","containerCpuUtil","setContainerCpuUtil","nodeMemoryUtil","setNodeMemoryUtil","containerMemoryUtil","setContainerMemoryUtil","nodeDiskRead","setNodeDiskRead","nodeDiskWrite","setNodeDiskWrite","diskIoTime","setDiskIoTime","networkReceive","setNetworkReceive","networkTransmit","setNetworkTransmit","networkDrops","setNetworkDrops","podCpuLimits","setPodCpuLimits","podCpuRequests","setPodCpuRequests","podMemoryRequests","setPodMemoryRequests","podMemoryLimits","setPodMemoryLimits","activeAlerts","setActiveAlerts","pendingAlerts","setPendingAlerts","podCrashEvents","setPodCrashEvents","nodeFailures","setNodeFailures","cpuManagerErrors","setCpuManagerErrors","memoryManagerErrors","setMemoryManagerErrors","predictedAnomaly","setPredictedAnomaly","predictionError","setPredictionError","loadingPrediction","setLoadingPrediction","handleInputChange","event","name","value","target","predictAnomaly","queryParams","URLSearchParams","node_cpu_utilization","container_cpu_usage","node_memory_utilization","container_memory_usage","node_disk_read","node_disk_write","disk_io_time","network_receive","network_transmit","network_drops","pod_cpu_limits","pod_cpu_requests","pod_memory_requests","pod_memory_limits","active_alerts","pending_alerts","pod_crash_events","node_failures","cpu_manager_errors","memory_manager_errors","response","fetch","ok","errorText","text","console","error","status","Error","data","json","predicted_anomaly","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","message","_c","$RefreshReg$"],"sources":["C:/Users/prafu/OneDrive/Desktop/KubeAI2/Kubernets-hackathon/src/pages/Issues.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Issues = () => {\r\n  const [nodeCpuUtil, setNodeCpuUtil] = useState(\"\");\r\n  const [containerCpuUtil, setContainerCpuUtil] = useState(\"\");\r\n  const [nodeMemoryUtil, setNodeMemoryUtil] = useState(\"\");\r\n  const [containerMemoryUtil, setContainerMemoryUtil] = useState(\"\");\r\n  const [nodeDiskRead, setNodeDiskRead] = useState(\"\");\r\n  const [nodeDiskWrite, setNodeDiskWrite] = useState(\"\");\r\n  const [diskIoTime, setDiskIoTime] = useState(\"\");\r\n  const [networkReceive, setNetworkReceive] = useState(\"\");\r\n  const [networkTransmit, setNetworkTransmit] = useState(\"\");\r\n  const [networkDrops, setNetworkDrops] = useState(\"\");\r\n  const [podCpuLimits, setPodCpuLimits] = useState(\"\");\r\n  const [podCpuRequests, setPodCpuRequests] = useState(\"\");\r\n  const [podMemoryRequests, setPodMemoryRequests] = useState(\"\");\r\n  const [podMemoryLimits, setPodMemoryLimits] = useState(\"\");\r\n  const [activeAlerts, setActiveAlerts] = useState(\"\");\r\n  const [pendingAlerts, setPendingAlerts] = useState(\"\");\r\n  const [podCrashEvents, setPodCrashEvents] = useState(\"\");\r\n  const [nodeFailures, setNodeFailures] = useState(\"\");\r\n  const [cpuManagerErrors, setCpuManagerErrors] = useState(\"\");\r\n  const [memoryManagerErrors, setMemoryManagerErrors] = useState(\"\");\r\n  const [predictedAnomaly, setPredictedAnomaly] = useState(null);\r\n  const [predictionError, setPredictionError] = useState(null);\r\n  const [loadingPrediction, setLoadingPrediction] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case \"node_cpu_utilization\":\r\n        setNodeCpuUtil(value);\r\n        break;\r\n      case \"container_cpu_usage\":\r\n        setContainerCpuUtil(value);\r\n        break;\r\n      case \"node_memory_utilization\":\r\n        setNodeMemoryUtil(value);\r\n        break;\r\n      case \"container_memory_usage\":\r\n        setContainerMemoryUtil(value);\r\n        break;\r\n      case \"node_disk_read\":\r\n        setNodeDiskRead(value);\r\n        break;\r\n      case \"node_disk_write\":\r\n        setNodeDiskWrite(value);\r\n        break;\r\n      case \"disk_io_time\":\r\n        setDiskIoTime(value);\r\n        break;\r\n      case \"network_receive\":\r\n        setNetworkReceive(value);\r\n        break;\r\n      case \"network_transmit\":\r\n        setNetworkTransmit(value);\r\n        break;\r\n      case \"network_drops\":\r\n        setNetworkDrops(value);\r\n        break;\r\n      case \"pod_cpu_limits\":\r\n        setPodCpuLimits(value);\r\n        break;\r\n      case \"pod_cpu_requests\":\r\n        setPodCpuRequests(value);\r\n        break;\r\n      case \"pod_memory_requests\":\r\n        setPodMemoryRequests(value);\r\n        break;\r\n      case \"pod_memory_limits\":\r\n        setPodMemoryLimits(value);\r\n        break;\r\n      case \"active_alerts\":\r\n        setActiveAlerts(value);\r\n        break;\r\n      case \"pending_alerts\":\r\n        setPendingAlerts(value);\r\n        break;\r\n      case \"pod_crash_events\":\r\n        setPodCrashEvents(value);\r\n        break;\r\n      case \"node_failures\":\r\n        setNodeFailures(value);\r\n        break;\r\n      case \"cpu_manager_errors\":\r\n        setCpuManagerErrors(value);\r\n        break;\r\n      case \"memory_manager_errors\":\r\n        setMemoryManagerErrors(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const predictAnomaly = async () => {\r\n    setLoadingPrediction(true);\r\n    setPredictionError(null);\r\n    setPredictedAnomaly(null);\r\n\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        node_cpu_utilization: nodeCpuUtil,\r\n        container_cpu_usage: containerCpuUtil,\r\n        node_memory_utilization: nodeMemoryUtil,\r\n        container_memory_usage: containerMemoryUtil,\r\n        node_disk_read: nodeDiskRead,\r\n        node_disk_write: nodeDiskWrite,\r\n        disk_io_time: diskIoTime,\r\n        network_receive: networkReceive,\r\n        network_transmit: networkTransmit,\r\n        network_drops: networkDrops,\r\n        pod_cpu_limits: podCpuLimits,\r\n        pod_cpu_requests: podCpuRequests,\r\n        pod_memory_requests: podMemoryRequests,\r\n        pod_memory_limits: podMemoryLimits,\r\n        active_alerts: activeAlerts,\r\n        pending_alerts: pendingAlerts,\r\n        pod_crash_events: podCrashEvents,\r\n        node_failures: nodeFailures,\r\n        cpu_manager_errors: cpuManagerErrors,\r\n        memory_manager_errors: memoryManagerErrors,\r\n      });\r\n\r\n      const response = await fetch(`http://127.0.0.1:5001/model-evaluation?${queryParams}`);\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error(\"HTTP error during prediction:\", response.status, errorText);\r\n        throw new Error(`HTTP error! Status: ${response.status}, Body: ${errorText}`);\r\n      }\r\n      const data = await response.json();\r\n      if (data && data.predicted_anomaly) {\r\n        setPredictedAnomaly(data.predicted_anomaly);\r\n      } else {\r\n        console.warn(\"Prediction data format unexpected:\", data);\r\n        setPredictionError(new Error(\"Unexpected data format for prediction.\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during prediction:\", error);\r\n      setPredictionError(error);\r\n    } finally {\r\n      setLoadingPrediction(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card prediction-card\">\r\n      <h2>⚙️ Anomaly Prediction</h2>\r\n      <div className=\"input-grid\">\r\n        <label>Node CPU Utilization:</label>\r\n        <input type=\"number\" name=\"node_cpu_utilization\" value={nodeCpuUtil} onChange={handleInputChange} />\r\n\r\n        <label>Container CPU Usage:</label>\r\n        <input type=\"number\" name=\"container_cpu_usage\" value={containerCpuUtil} onChange={handleInputChange} />\r\n\r\n        <label>Node Memory Utilization:</label>\r\n        <input type=\"number\" name=\"node_memory_utilization\" value={nodeMemoryUtil} onChange={handleInputChange} />\r\n\r\n        <label>Container Memory Usage:</label>\r\n        <input type=\"number\" name=\"container_memory_usage\" value={containerMemoryUtil} onChange={handleInputChange} />\r\n\r\n        <label>Node Disk Read:</label>\r\n        <input type=\"number\" name=\"node_disk_read\" value={nodeDiskRead} onChange={handleInputChange} />\r\n\r\n        <label>Node Disk Write:</label>\r\n        <input type=\"number\" name=\"node_disk_write\" value={nodeDiskWrite} onChange={handleInputChange} />\r\n\r\n        <label>Disk IO Time:</label>\r\n        <input type=\"number\" name=\"disk_io_time\" value={diskIoTime} onChange={handleInputChange} />\r\n\r\n        <label>Network Receive:</label>\r\n        <input type=\"number\" name=\"network_receive\" value={networkReceive} onChange={handleInputChange} />\r\n\r\n        <label>Network Transmit:</label>\r\n        <input type=\"number\" name=\"network_transmit\" value={networkTransmit} onChange={handleInputChange} />\r\n\r\n        <label>Network Drops:</label>\r\n        <input type=\"number\" name=\"network_drops\" value={networkDrops} onChange={handleInputChange} />\r\n\r\n        <label>Pod CPU Limits:</label>\r\n        <input type=\"number\" name=\"pod_cpu_limits\" value={podCpuLimits} onChange={handleInputChange} />\r\n\r\n        <label>Pod CPU Requests:</label>\r\n        <input type=\"number\" name=\"pod_cpu_requests\" value={podCpuRequests} onChange={handleInputChange} />\r\n\r\n        <label>Pod Memory Requests:</label>\r\n        <input type=\"number\" name=\"pod_memory_requests\" value={podMemoryRequests} onChange={handleInputChange} />\r\n\r\n        <label>Pod Memory Limits:</label>\r\n        <input type=\"number\" name=\"pod_memory_limits\" value={podMemoryLimits} onChange={handleInputChange} />\r\n\r\n        <label>Active Alerts:</label>\r\n        <input type=\"number\" name=\"active_alerts\" value={activeAlerts} onChange={handleInputChange} />\r\n\r\n        <label>Pending Alerts:</label>\r\n        <input type=\"number\" name=\"pending_alerts\" value={pendingAlerts} onChange={handleInputChange} />\r\n\r\n        <label>Pod Crash Events:</label>\r\n        <input type=\"number\" name=\"pod_crash_events\" value={podCrashEvents} onChange={handleInputChange} />\r\n\r\n        <label>Node Failures:</label>\r\n        <input type=\"number\" name=\"node_failures\" value={nodeFailures} onChange={handleInputChange} />\r\n\r\n        <label>CPU Manager Errors:</label>\r\n        <input type=\"number\" name=\"cpu_manager_errors\" value={cpuManagerErrors} onChange={handleInputChange} />\r\n\r\n        <label>Memory Manager Errors:</label>\r\n        <input type=\"number\" name=\"memory_manager_errors\" value={memoryManagerErrors} onChange={handleInputChange} />\r\n      </div>\r\n\r\n      <button onClick={predictAnomaly} disabled={loadingPrediction}>\r\n        {loadingPrediction ? \"Predicting...\" : \"Predict Anomaly\"}\r\n      </button>\r\n\r\n      {predictionError && <p className=\"error\">Prediction Error: {predictionError.message}</p>}\r\n      {predictedAnomaly && (\r\n        <div className=\"prediction-result\">\r\n          <h3>Predicted Anomaly Type:</h3>\r\n          <p>{predictedAnomaly}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issues;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}