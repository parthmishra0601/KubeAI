{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prafu\\\\OneDrive\\\\Desktop\\\\KubeAI2\\\\Kubernets-hackathon\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Issues from \"./Issues\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notebookOutputs, setNotebookOutputs] = useState([]);\n  const fetchNotebookOutputs = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/get-notebook-output\");\n      const data = await response.json();\n      const parsedOutputs = data.outputs.map((output, index) => {\n        var _lines$, _lines$2, _lines$3, _lines$4, _lines$5;\n        const lines = output.split(\"\\n\");\n        return {\n          id: index + 1,\n          timestamp: (_lines$ = lines[0]) === null || _lines$ === void 0 ? void 0 : _lines$.replace(\"Timestamp: \", \"\").trim(),\n          cpuUsage: (_lines$2 = lines[1]) === null || _lines$2 === void 0 ? void 0 : _lines$2.replace(\"CPU Usage: \", \"\").trim(),\n          memoryUsage: (_lines$3 = lines[2]) === null || _lines$3 === void 0 ? void 0 : _lines$3.replace(\"Memory Usage: \", \"\").trim(),\n          podStatus: (_lines$4 = lines[3]) === null || _lines$4 === void 0 ? void 0 : _lines$4.replace(\"Pod Status: \", \"\").trim(),\n          predictedIssue: (_lines$5 = lines[4]) === null || _lines$5 === void 0 ? void 0 : _lines$5.replace(\"Predicted Issue: \", \"\").trim()\n        };\n      });\n      setNotebookOutputs(parsedOutputs);\n\n      // Save anomalies to localStorage (you might want to handle this differently)\n      const anomalies = parsedOutputs.filter(entry => entry.podStatus === \"Warning\").map(entry => ({\n        id: entry.id,\n        severity: entry.predictedIssue.includes(\"Anomaly\") ? \"Critical\" : \"High\",\n        timestamp: entry.timestamp,\n        cpuUsage: entry.cpuUsage,\n        memoryUsage: entry.memoryUsage\n      }));\n      localStorage.setItem(\"anomalies\", JSON.stringify(anomalies));\n    } catch (error) {\n      console.error(\"Error fetching notebook output:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchNotebookOutputs();\n    const interval = setInterval(fetchNotebookOutputs, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA Kubernetes Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Nodes: \", notebookOutputs.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Healthy Nodes: \", notebookOutputs.filter(n => n.podStatus === \"Running\").length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Warnings: \", notebookOutputs.filter(n => n.podStatus === \"Warning\").length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Issues, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"diUsrFhODrdTrIGYhUsTar1qB68=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Issues","jsxDEV","_jsxDEV","Dashboard","_s","notebookOutputs","setNotebookOutputs","fetchNotebookOutputs","response","fetch","data","json","parsedOutputs","outputs","map","output","index","_lines$","_lines$2","_lines$3","_lines$4","_lines$5","lines","split","id","timestamp","replace","trim","cpuUsage","memoryUsage","podStatus","predictedIssue","anomalies","filter","entry","severity","includes","localStorage","setItem","JSON","stringify","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","n","_c","$RefreshReg$"],"sources":["C:/Users/prafu/OneDrive/Desktop/KubeAI2/Kubernets-hackathon/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Issues from \"./Issues\";\r\n\r\nconst Dashboard = () => {\r\n  const [notebookOutputs, setNotebookOutputs] = useState([]);\r\n\r\n  const fetchNotebookOutputs = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/get-notebook-output\");\r\n      const data = await response.json();\r\n\r\n      const parsedOutputs = data.outputs.map((output, index) => {\r\n        const lines = output.split(\"\\n\");\r\n        return {\r\n          id: index + 1,\r\n          timestamp: lines[0]?.replace(\"Timestamp: \", \"\").trim(),\r\n          cpuUsage: lines[1]?.replace(\"CPU Usage: \", \"\").trim(),\r\n          memoryUsage: lines[2]?.replace(\"Memory Usage: \", \"\").trim(),\r\n          podStatus: lines[3]?.replace(\"Pod Status: \", \"\").trim(),\r\n          predictedIssue: lines[4]?.replace(\"Predicted Issue: \", \"\").trim(),\r\n        };\r\n      });\r\n\r\n      setNotebookOutputs(parsedOutputs);\r\n\r\n      // Save anomalies to localStorage (you might want to handle this differently)\r\n      const anomalies = parsedOutputs\r\n        .filter((entry) => entry.podStatus === \"Warning\")\r\n        .map((entry) => ({\r\n          id: entry.id,\r\n          severity: entry.predictedIssue.includes(\"Anomaly\") ? \"Critical\" : \"High\",\r\n          timestamp: entry.timestamp,\r\n          cpuUsage: entry.cpuUsage,\r\n          memoryUsage: entry.memoryUsage,\r\n        }));\r\n\r\n      localStorage.setItem(\"anomalies\", JSON.stringify(anomalies));\r\n    } catch (error) {\r\n      console.error(\"Error fetching notebook output:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotebookOutputs();\r\n    const interval = setInterval(fetchNotebookOutputs, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>ðŸ“Š Kubernetes Monitoring Dashboard</h1>\r\n      <div className=\"stats\">\r\n        <p>Total Nodes: {notebookOutputs.length}</p>\r\n        <p>Healthy Nodes: {notebookOutputs.filter(n => n.podStatus === \"Running\").length}</p>\r\n        <p>Warnings: {notebookOutputs.filter(n => n.podStatus === \"Warning\").length}</p>\r\n      </div>\r\n\r\n      \r\n      <Issues />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMS,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;MACzE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,MAAMC,aAAa,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QAAA,IAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA;QACxD,MAAMC,KAAK,GAAGP,MAAM,CAACQ,KAAK,CAAC,IAAI,CAAC;QAChC,OAAO;UACLC,EAAE,EAAER,KAAK,GAAG,CAAC;UACbS,SAAS,GAAAR,OAAA,GAAEK,KAAK,CAAC,CAAC,CAAC,cAAAL,OAAA,uBAARA,OAAA,CAAUS,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;UACtDC,QAAQ,GAAAV,QAAA,GAAEI,KAAK,CAAC,CAAC,CAAC,cAAAJ,QAAA,uBAARA,QAAA,CAAUQ,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;UACrDE,WAAW,GAAAV,QAAA,GAAEG,KAAK,CAAC,CAAC,CAAC,cAAAH,QAAA,uBAARA,QAAA,CAAUO,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;UAC3DG,SAAS,GAAAV,QAAA,GAAEE,KAAK,CAAC,CAAC,CAAC,cAAAF,QAAA,uBAARA,QAAA,CAAUM,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;UACvDI,cAAc,GAAAV,QAAA,GAAEC,KAAK,CAAC,CAAC,CAAC,cAAAD,QAAA,uBAARA,QAAA,CAAUK,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC;QAClE,CAAC;MACH,CAAC,CAAC;MAEFrB,kBAAkB,CAACM,aAAa,CAAC;;MAEjC;MACA,MAAMoB,SAAS,GAAGpB,aAAa,CAC5BqB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACJ,SAAS,KAAK,SAAS,CAAC,CAChDhB,GAAG,CAAEoB,KAAK,KAAM;QACfV,EAAE,EAAEU,KAAK,CAACV,EAAE;QACZW,QAAQ,EAAED,KAAK,CAACH,cAAc,CAACK,QAAQ,CAAC,SAAS,CAAC,GAAG,UAAU,GAAG,MAAM;QACxEX,SAAS,EAAES,KAAK,CAACT,SAAS;QAC1BG,QAAQ,EAAEM,KAAK,CAACN,QAAQ;QACxBC,WAAW,EAAEK,KAAK,CAACL;MACrB,CAAC,CAAC,CAAC;MAELQ,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACR,SAAS,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED1C,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAAC,CAAC;IACtB,MAAMoC,QAAQ,GAAGC,WAAW,CAACrC,oBAAoB,EAAE,IAAI,CAAC;IACxD,OAAO,MAAMsC,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzC,OAAA;IAAK4C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7C,OAAA;MAAA6C,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CjD,OAAA;MAAK4C,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB7C,OAAA;QAAA6C,QAAA,GAAG,eAAa,EAAC1C,eAAe,CAAC+C,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CjD,OAAA;QAAA6C,QAAA,GAAG,iBAAe,EAAC1C,eAAe,CAAC4B,MAAM,CAACoB,CAAC,IAAIA,CAAC,CAACvB,SAAS,KAAK,SAAS,CAAC,CAACsB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrFjD,OAAA;QAAA6C,QAAA,GAAG,YAAU,EAAC1C,eAAe,CAAC4B,MAAM,CAACoB,CAAC,IAAIA,CAAC,CAACvB,SAAS,KAAK,SAAS,CAAC,CAACsB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eAGNjD,OAAA,CAACF,MAAM;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC/C,EAAA,CA1DID,SAAS;AAAAmD,EAAA,GAATnD,SAAS;AA4Df,eAAeA,SAAS;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}