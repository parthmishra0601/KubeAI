{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prafu\\\\OneDrive\\\\Desktop\\\\KubeAI2\\\\Kubernets-hackathon\\\\src\\\\pages\\\\Issues.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Issues = () => {\n  _s();\n  const [evaluationData, setEvaluationData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEvaluationData = async () => {\n      const url = \"http://127.0.0.1:5001/model-evaluation\";\n      console.log(\"Fetching from:\", url); // Log the URL\n\n      try {\n        const response = await fetch(url);\n        console.log(\"Fetch response:\", response); // Log the entire response object\n\n        if (!response.ok) {\n          const errorText = await response.text(); // Try to get more error info from the server\n          console.error(\"HTTP error!\", response.status, errorText);\n          throw new Error(`HTTP error! Status: ${response.status}, Body: ${errorText}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetch data:\", data); // Log the received data\n        setEvaluationData(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching model evaluation:\", err);\n        setError(err);\n      }\n    };\n    fetchEvaluationData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading evaluation data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (!evaluationData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading model evaluation data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card issues-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Model Evaluation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), evaluationData.classification_report && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Classification Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(evaluationData.classification_report, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), evaluationData.confusion_matrix && evaluationData.classes && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Confusion Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"issues-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), evaluationData.classes.map(c => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Predicted \", c]\n              }, c, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: evaluationData.classes.map((actualClass, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Actual \", actualClass]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), evaluationData.confusion_matrix[index].map((count, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: count\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this))]\n            }, actualClass, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), evaluationData.confusion_matrix_image && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Confusion Matrix Plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${evaluationData.confusion_matrix_image}`,\n        alt: \"Confusion Matrix\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Issues, \"vtvSue50IOvy78XG0sRZrtlG/Zo=\");\n_c = Issues;\nexport default Issues;\nvar _c;\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Issues","_s","evaluationData","setEvaluationData","error","setError","fetchEvaluationData","url","console","log","response","fetch","ok","errorText","text","status","Error","data","json","err","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","classification_report","JSON","stringify","confusion_matrix","classes","map","c","actualClass","index","count","i","confusion_matrix_image","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/prafu/OneDrive/Desktop/KubeAI2/Kubernets-hackathon/src/pages/Issues.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Issues = () => {\r\n  const [evaluationData, setEvaluationData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEvaluationData = async () => {\r\n      const url = \"http://127.0.0.1:5001/model-evaluation\";\r\n      console.log(\"Fetching from:\", url); // Log the URL\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        console.log(\"Fetch response:\", response); // Log the entire response object\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text(); // Try to get more error info from the server\r\n          console.error(\"HTTP error!\", response.status, errorText);\r\n          throw new Error(`HTTP error! Status: ${response.status}, Body: ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Fetch data:\", data); // Log the received data\r\n        setEvaluationData(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error(\"Error fetching model evaluation:\", err);\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    fetchEvaluationData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error loading evaluation data: {error.message}</div>;\r\n  }\r\n\r\n  if (!evaluationData) {\r\n    return <div>Loading model evaluation data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card issues-card\">\r\n      <h2>Model Evaluation</h2>\r\n      {evaluationData.classification_report && (\r\n        <div>\r\n          <h3>Classification Report</h3>\r\n          <pre>{JSON.stringify(evaluationData.classification_report, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n\r\n      {evaluationData.confusion_matrix && evaluationData.classes && (\r\n        <div>\r\n          <h3>Confusion Matrix</h3>\r\n          <div className=\"table-container\">\r\n            <table className=\"issues-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  {evaluationData.classes.map((c) => (\r\n                    <th key={c}>Predicted {c}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {evaluationData.classes.map((actualClass, index) => (\r\n                  <tr key={actualClass}>\r\n                    <th>Actual {actualClass}</th>\r\n                    {evaluationData.confusion_matrix[index].map((count, i) => (\r\n                      <td key={i}>{count}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {evaluationData.confusion_matrix_image && (\r\n        <div>\r\n          <h3>Confusion Matrix Plot</h3>\r\n          <img\r\n            src={`data:image/png;base64,${evaluationData.confusion_matrix_image}`}\r\n            alt=\"Confusion Matrix\"\r\n            style={{ maxWidth: '100%' }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issues;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}